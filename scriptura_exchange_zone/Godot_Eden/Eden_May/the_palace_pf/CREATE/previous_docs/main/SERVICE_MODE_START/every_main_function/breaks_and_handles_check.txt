func breaks_and_handles_check():
	#print()
	
	var current_state_mutexes : Array = []
	var negative_counter : int = -1
	var positive_counter : int = -1
	
#####################################################
		## active_r_s_mut
	var mutex_check_0 = null
	if active_r_s_mut.try_lock():
		mutex_check_0 = active_r_s_mut.try_lock()
		#############################################
		positive_counter +=1
	else:
		mutex_check_0 = false
		negative_counter +=1
		#############################################
	current_state_mutexes.append(mutex_check_0)
#####################################################
	
#####################################################
		## cached_r_s_mutex
	var mutex_check_1 = null
	if cached_r_s_mutex.try_lock():
		mutex_check_1 = cached_r_s_mutex.try_lock()
		#############################################
		positive_counter +=1
	else:
		mutex_check_1 = false
		negative_counter +=1
		#############################################
	current_state_mutexes.append(mutex_check_1)
#####################################################
	
#####################################################
		## tree_mutex
	var mutex_check_2 = null
	if tree_mutex.try_lock():
		mutex_check_2 = tree_mutex.try_lock()
		#############################################
		positive_counter +=1
	else:
		mutex_check_2 = false
		negative_counter +=1
		#############################################
	current_state_mutexes.append(mutex_check_2)
#####################################################
	
	
#####################################################
		## cached_tree_mutex
	var mutex_check_3 = null
	if cached_tree_mutex.try_lock():
		mutex_check_3 = cached_tree_mutex.try_lock()
		#############################################
		positive_counter +=1
	else:
		mutex_check_3 = false
		negative_counter +=1
		#############################################
	current_state_mutexes.append(mutex_check_3)
#####################################################
	
	
#####################################################
		## mutex_nodes_to_be_added
	var mutex_check_4 = null
	if mutex_nodes_to_be_added.try_lock():
		mutex_check_4 = mutex_nodes_to_be_added.try_lock()
		#############################################
		positive_counter +=1
	else:
		mutex_check_4 = false
		negative_counter +=1
		#############################################
	current_state_mutexes.append(mutex_check_4)
#####################################################
	
#####################################################
		## movmentes_mutex
	var mutex_check_5 = null
	if movmentes_mutex.try_lock():
		mutex_check_5 = movmentes_mutex.try_lock()
		#############################################
		positive_counter +=1
	else:
		mutex_check_5 = false
		negative_counter +=1
		#############################################
	current_state_mutexes.append(mutex_check_5)
#####################################################
	
#####################################################
		## mutex_data_to_send
	var mutex_check_6 = null
	if mutex_data_to_send.try_lock():
		mutex_check_6 = mutex_data_to_send.try_lock()
		#############################################
		positive_counter +=1
	else:
		mutex_check_6 = false
		negative_counter +=1
		#############################################
	current_state_mutexes.append(mutex_check_6)
#####################################################
	
#####################################################
		## mutex_function_call
	var mutex_check_7 = null
	if mutex_function_call.try_lock():
		mutex_check_7 = mutex_function_call.try_lock()
		#############################################
		positive_counter +=1
	else:
		mutex_check_7 = false
		negative_counter +=1
		#############################################
	current_state_mutexes.append(mutex_check_7)
#####################################################
	
#####################################################
		## mutex_for_unloading_nodes
	var mutex_check_8 = null
	if mutex_for_unloading_nodes.try_lock():
		mutex_check_8 = mutex_for_unloading_nodes.try_lock()
		#############################################
		positive_counter +=1
	else:
		mutex_check_8 = false
		negative_counter +=1
		#############################################
	current_state_mutexes.append(mutex_check_8)
#####################################################

#####################################################
		## array_mutex_process
	var mutex_check_9 = null
	if array_mutex_process.try_lock():
		mutex_check_9 = array_mutex_process.try_lock()
		#############################################
		positive_counter +=1
	else:
		mutex_check_9 = false
		negative_counter +=1
		#############################################
	current_state_mutexes.append(mutex_check_9)
#####################################################



############################################################

# the cardinal sin of creation beyond number 9

#############################################################


#####################################################
		## menace_mutex
	var mutex_check_00 = null
	if menace_mutex.try_lock():
		mutex_check_00 = menace_mutex.try_lock()
		#############################################
		positive_counter +=1
	else:
		mutex_check_00 = false
		negative_counter +=1
		#############################################
	current_state_mutexes.append(mutex_check_00)
#####################################################

#####################################################
	# array_counting_mutex
	var mutex_check_01 = null
	if array_counting_mutex.try_lock():
		mutex_check_01 = array_counting_mutex.try_lock()
		#############################################
		positive_counter +=1
	else:
		mutex_check_01 = false
		negative_counter +=1
		#############################################
	current_state_mutexes.append(mutex_check_01)
#####################################################

#####################################################
	# mutex_for_container_state
	var mutex_check_02 = null
	if mutex_for_container_state.try_lock():
		mutex_check_02 = mutex_for_container_state.try_lock()
		#############################################
		positive_counter +=1
	else:
		mutex_check_02 = false
		negative_counter +=1
		#############################################
	current_state_mutexes.append(mutex_check_02)
#####################################################

#####################################################
	# mutex_for_trickery
	var mutex_check_03 = null
	if mutex_for_trickery.try_lock():
		mutex_check_03 = mutex_for_trickery.try_lock()
		#############################################
		positive_counter +=1
	else:
		mutex_check_03 = false
		negative_counter +=1
		#############################################
	current_state_mutexes.append(mutex_check_03)
#####################################################

#####################################################
	# unload_queue_mutex
	var mutex_check_04 = null
	if unload_queue_mutex.try_lock():
		mutex_check_04 = unload_queue_mutex.try_lock()
		#############################################
		positive_counter +=1
	else:
		mutex_check_04 = false
		negative_counter +=1
		#############################################
	current_state_mutexes.append(mutex_check_04)
#####################################################

#####################################################
	# mutex_containers
	var mutex_check_05 = null
	if mutex_containers.try_lock():
		mutex_check_05 = mutex_containers.try_lock()
		#############################################
		positive_counter +=1
	else:
		mutex_check_05 = false
		negative_counter +=1
		#############################################
	current_state_mutexes.append(mutex_check_05)
#####################################################

#####################################################
	# mutex_singular_l_u
	var mutex_check_06 = null
	if mutex_singular_l_u.try_lock():
		mutex_check_06 = mutex_singular_l_u.try_lock()
		#############################################
		positive_counter +=1
	else:
		mutex_check_06 = false
		negative_counter +=1
		#############################################
	current_state_mutexes.append(mutex_check_06)
#####################################################



#####################################################
	# unload_queue_mutex
	var mutex_check_07 = null
	if unload_queue_mutex.try_lock():
		mutex_check_07 = unload_queue_mutex.try_lock()
		#############################################
		positive_counter +=1
	else:
		mutex_check_07 = false
		negative_counter +=1
		#############################################
	current_state_mutexes.append(mutex_check_07)
#####################################################


#####################################################
	# load_queue_mutex
	var mutex_check_08 = null
	if load_queue_mutex.try_lock():
		mutex_check_08 = load_queue_mutex.try_lock()
		#############################################
		positive_counter +=1
	else:
		mutex_check_08 = false
		negative_counter +=1
		#############################################
	current_state_mutexes.append(mutex_check_08)
#####################################################
	
	

	return current_state_mutexes