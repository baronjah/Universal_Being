func _ready():
	if OS.is_debug_build():
		print("Scanning in debug mode, OS.is_debug_build()")
		print_stack()  # Only in debug
	else: 
		print(" os is not in debug build ")

	current_operational_system = OS.get_name()
	var file = FileAccess.open("res://main.gd", FileAccess.READ)
	if file:
		var content = file.get_as_text()
		var structure = task_manager.parse_code_structure(content)
		task_manager.create_tasks_from_structure(structure)
		print(task_manager.generate_task_report())
	var res_scan = scan_res_directory()
	start_timer_of_finito()
	print_stack() 
	print_tree_pretty()
	print_stack() 
	scan_eden_directory()
	message_of_delta_start = breaks_and_handles_check()
	thread_pool.connect("task_discarded", func(task): 
		print("❌ Task discarded:", task)
		queue_pusher_adder(task)
		int_of_stuff_finished += 1
	)

	thread_pool.connect("task_started", func(task):
		print("⏳ Task Started:", task)
		track_task_status(task)
		int_of_stuff_started += 1
	)

	check_status_just_timer()
	check_settings_file()
	mouse_pos = get_viewport().get_mouse_position()
	camera = get_viewport().get_camera_3d()
	viewport = get_viewport()
	check_status_just_timer()
	start_up_scene_tree()
	check_status_just_timer()
	test_single_core()
	test_multi_threaded()
	timer_system.connect("interval_tick", Callable(self, "_on_interval_tick"))