# VR Implementation for Eden Space Game

This document explains the VR implementation for the Eden Space Game, specifically focusing on the integration between the Akashic Records (Dynamic Dictionary) system and the space exploration game in VR.

## 1. Overview

The VR system allows players to experience the Eden Space Game in virtual reality using the Oculus Quest 2. The key feature is a stationary camera approach where the player remains at the center of the universe while the world moves around them, which helps reduce motion sickness and make the experience more comfortable.

The implementation connects three key systems:
- **VR Interaction**: Controllers, movement, and selection in VR
- **Akashic Records**: The dynamic dictionary system for managing words and concepts
- **Space Game**: The universe exploration with multiple scale levels

## 2. System Components

### VR Manager (vr_manager.gd)
The core VR control system that:
- Initializes the VR interface using OpenXR
- Manages controller input and gestures
- Handles scale transitions
- Implements a world-centered approach (stationary camera)
- Provides teleportation and interaction systems

### VR Akashic Interface (vr_akashic_interface.gd)
A specialized interface for interacting with the Akashic Records in VR:
- Visualizes dictionary words in 3D space with different layouts
- Allows creating, connecting, and deleting words with VR controllers
- Provides UI panels for viewing and editing word details
- Supports multiple visualization layouts (radial, hierarchical, force-directed)

### VR Scene Setup (vr_scene_setup.gd)
Connects the VR system with both the Akashic Records and Universe Controller:
- Initializes all required systems
- Connects signals between components
- Handles scale transitions between cosmic levels
- Maintains synchronization between VR view and universe state

### VR Plugin (vr_plugin.gd)
An editor plugin that makes the VR system accessible in the Godot editor:
- Registers the VR manager as a singleton
- Adds custom types to the editor
- Makes VR components easily accessible

## 3. VR Input and Interaction

### Controller Mappings
- **Left Controller**
  - Trigger: Interact with objects/words
  - Grip: Grab and move objects
  - Primary Button: Scale transition up (zoom out)
  - Secondary Buttons: Special actions

- **Right Controller**
  - Trigger: Select objects/words
  - Grip: Toggle menu display
  - Primary Button: Scale transition down (zoom in)
  - Secondary Buttons: Special actions

### Gesture Recognition
The system recognizes several gestures:
- **Pinch**: Moving controllers together to select smaller scale
- **Spread**: Moving controllers apart to select larger scale
- **Drawing**: Creating shapes in the air to trigger special actions

## 4. World-Centered Approach

Unlike traditional VR implementations where the player moves through the environment, the Eden VR system keeps the player stationary and moves the world around them. This is particularly important given the vast scale differences between universe view and element interactions.

Benefits:
- Reduces motion sickness
- Allows for better handling of scale transitions
- Makes physical movement in room-scale VR more meaningful
- Improves physics stability across scales

Implementation:
- The VR camera remains at a fixed position (origin)
- Scale transitions transform the world relative to the player
- Objects are scaled and positioned relative to the player
- Physics interactions are calculated in the current scale's reference frame

## 5. Scale Transitions

The system supports seamless transitions between five scale levels:
- **Universe**: Multiple galaxies view
- **Galaxy**: Stars within a galaxy
- **Star System**: Planets orbiting a star
- **Planet**: Surface of a planet
- **Element**: Individual elements and their interactions

During transitions:
- The current scale fades out
- The target scale fades in
- Visual effects (blur, distortion) enhance the sense of scale change
- Camera parameters (FOV, etc.) adjust to the new scale

## 6. Akashic Records in VR

The Akashic Records (Dynamic Dictionary) system is visualized in 3D space, allowing players to:
- See words as 3D objects with connections between them
- Create new words and connections using controller gestures
- Manipulate properties and states of words
- View different organization layouts

Visualization styles:
- **Radial**: Words organized in concentric circles around central concepts
- **Hierarchical**: Words organized in parent-child relationships
- **Force-Directed**: Words dynamically positioned based on their connections

## 7. Integration with Space Game

The VR system integrates with the existing Space Game through:
- Scale-specific interactions based on the current cosmic scale
- Bidirectional communication between dictionary entities and cosmic objects
- Shared resource management
- Synchronized scale transitions

## 8. Technical Requirements

- **Hardware**: Oculus Quest 2 (minimum)
- **Godot Version**: 4.4 or higher
- **Render Pipeline**: GLES3 (for better performance on Quest 2)
- **XR Plugins**: OpenXR

## 9. Performance Considerations

VR implementation includes several performance optimizations:
- Dynamic LOD (Level of Detail) based on distance and importance
- Culling of objects outside the field of view
- Reduced polygon count for VR-specific models
- Optimized shaders for mobile VR
- Asynchronous loading of resources during scale transitions

## 10. Setup Instructions

To enable VR in the Eden Space Game:

1. Ensure the Oculus Quest 2 is connected and in developer mode
2. Install the project on the Quest 2 using Godot's export system
3. Add a `VRSceneSetup` node to your main scene
4. Configure settings in the VRSceneSetup node:
   - Auto-initialize VR: true
   - Enable passthrough: (optional)
   - Show debug UI: true (during development)
5. Start the game in VR mode

## 11. Future Enhancements

Planned VR enhancements:
- Hand tracking support for controller-free interaction
- Enhanced haptic feedback for element interactions
- Voice commands for dictionary manipulation
- Multiplayer support for shared VR experiences
- Support for additional VR hardware

## 12. Troubleshooting

Common issues and solutions:
- If scale transitions cause discomfort, adjust transition speed in settings
- If performance is poor, reduce visual effects and draw distance
- If controller tracking is lost, ensure adequate lighting in the room
- If Akashic visualization is cluttered, try different layout types

## 13. Credits and Resources

This VR implementation builds upon:
- Godot's XR framework
- OpenXR standard
- Existing Eden Space Game architecture
- Akashic Records Dynamic Dictionary system