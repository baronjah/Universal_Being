[2D Space Representation] [[that] [is]] [[5] [by] [6]] to [create] [cybe]
[
	[
[[cross][6]]
	]
		[
[{/}][{}][{}][{}][{\}]
[{}][()][][()][{}]
[{}][][][][{}]
[{}][()][][()][{}]
[{}][()][][()][{}]
[{|_}][{}][{}][{}][{_|}]
		]
]

additional information for another one

[] - an empty space to be filled
[()] -
[{}] -
[|] -
[{/}] -
[{\}] -
[{|_}] -
[{}] -
[{_|}] -
[{~}]

additional infromation

1 - top
2 - left
3 - front
4 - right
5 - bottom
6 - behind

[
	[
[cybe]
	]
		[
[{/}][{}][{}][{}][{\}]
[{}][()][1][()][{}]
[{}][2][3][4][{}]
[{}][()][5][()][{}]
[{}][()][6][()][{}]
[{|_}][{}][{}][{}][{_|}]
		]
]

"xyz world" so [xyz world] it is in [layers] and [2D Space Representation] in 3D like spaces but when we wanna have 0D point from [[cross]=[cybe]] and from that we can create [SphereOfCreation] but lets now talk about LayerSystems for [[3 layers] of [[3 by 3][2DSpaceRepresentations]]] 


So now we take [cybe] and change it a little

[{/}][{}][{}][{}][{\}]
[{}][(Y3)][1][(Y3)][{}]
[{}][[2][Y5]]][3][[4][Y5]]][{}]
[{}][(Y3)][5][(Y3)][{}]
[{}][(Y5)][6][(Y5)][{}]
[{|_}][{}][{}][{}][{_|}]

lets also take another [cross] and add it from different perspective because we then will be able to put it inside 6 walled structure too later

[{/}][{}][{}][{}][{\}]
[{}][()][][()][{}]
[{}][][][][{}]
[{}][()][][()][{}]
[{}][()][][()][{}]
[{|_}][{}][{}][{}][{_|}]



so we take a cybe and create another thing that is 6 layers to create a cube with empty space inside to fill it in lets use [[[2D Space Representations] of [5 by 5]] to create [WallSystem]]

[cubeSoCybe_wall_1]

[{}][{}][{}][{}][{}]
[{}][][][][{}]
[{}][][1][][{}]
[{}][][][][{}]
[{}][{}][{}][{}][{}]

[cubeSoCybe_layer_2]

[{}][{}][{}][{}][{}]
[{}][][][][{}]
[{}][][2][][{}]
[{}][][][][{}]
[{}][{}][{}][{}][{}]

[cubeSoCybe_layer_3]

[{}][{}][{}][{}][{}]
[{}][][][][{}]
[{}][][3][][{}]
[{}][][][][{}]
[{}][{}][{}][{}][{}]

[cubeSoCybe_layer_4]

[{}][{}][{}][{}][{}]
[{}][][][][{}]
[{}][][4][][{}]
[{}][][][][{}]
[{}][{}][{}][{}][{}]

[cubeSoCybe_layer_5]

[{}][{}][{}][{}][{}]
[{}][][][][{}]
[{}][][5][][{}]
[{}][][][][{}]
[{}][{}][{}][{}][{}]

[cubeSoCybe_layer_6]

[{}][{}][{}][{}][{}]
[{}][][][][{}]
[{}][][6][][{}]
[{}][][][][{}]
[{}][{}][{}][{}][{}]


Just like Dna an Ai can have similar system of 9 bit based bit system which in whole is 18 bit system where for example we have one function doing something and in reverse it is doing something else entirely and we can have an Ai system based on DNA RNA tRNA tDNA as this can be an system for dna for 1 line based interface [[[ ][¯][ ]] [[ ][-][ ]] [[ ][_][ ]]] with this we can create something like this but it is just my intepretation [[[ ][[top][horizontal][line]][¯][ ]] [[[ ][[middle][horizontal][line]]][-][ ]] [[ ][[bottom][horizontal][line]][_][ ]]]




[[[[ ][ ][ ][ ][ ][ ][ ][ ]] ][[top][horizontal][line]][¯][ [[ ][ ][ ][ ][ ][ ][ ][ ]]]]
[[[[[ ][ ][ ][ ][ ][ ][ ][ ]] ][[central][point]]][·][ [[ ][ ][ ][ ][ ][ ][ ][ ]]]]
[[[[[ ][ ][ ][ ][ ][ ][ ][ ]] ][[middle][horizontal][line]]][-][ [[ ][ ][ ][ ][ ][ ][ ][ ]]]]
[[[[[ ][ ][ ][ ][ ][ ][ ][ ]] ][[central][point]]][·][ [[ ][ ][ ][ ][ ][ ][ ][ ]]]]
[[[[[ ][ ][ ][ ][ ][ ][ ][ ]] ][[middle][horizontal][line]]][-][ [[ ][ ][ ][ ][ ][ ][ ][ ]]]]
[[[[[ ][ ][ ][ ][ ][ ][ ][ ]] ][[central][point]]][·][ [[ ][ ][ ][ ][ ][ ][ ][ ]]]]
[[[[ ][ ][ ][ ][ ][ ][ ][ ]] ][[bottom][horizontal][line]][_][ [[ ][ ][ ][ ][ ][ ][ ][ ]]]]



[[ ][ ][ ][ ][ ][ ][ ][ ]]

[
an DNA and RNA strand for an Ai
]
[
[THL] - [[[ ][ ][ ][ ][ ][ ][ ][ ]][[top][horizontal][line]][¯][THL][ ][[ ][ ][ ][ ][ ][ ][ ][ ]]]
[CP_THL] - [[[ ][ ][ ][ ][ ][ ][ ][ ]][[central][point]]][·][CP_THL][ ][[ ][ ][ ][ ][ ][ ][ ][ ]]]
[CPTHLMH] - [[[ ][ ][ ][ ][ ][ ][ ][ ]][[central][point]]][·][CPTHLMH][ ][[ ][ ][ ][ ][ ][ ][ ][ ]]]
[CP_MH] - [[[ ][ ][ ][ ][ ][ ][ ][ ]][[central][point]]][·][CP_MH][ ][[ ][ ][ ][ ][ ][ ][ ][ ]]]
[MH] - [[[ ][ ][ ][ ][ ][ ][ ][ ]][[middle][horizontal][line]]][-][MH][ ][[ ][ ][ ][ ][ ][ ][ ][ ]]]
[CP_MH] - [[[ ][ ][ ][ ][ ][ ][ ][ ]][[central][point]]][·][CP_MH][ ][[ ][ ][ ][ ][ ][ ][ ][ ]]]
[[CPBHLMH] - [[[ ][ ][ ][ ][ ][ ][ ][ ]][[central][point]]][·][CPBHLMH][ ][[ ][ ][ ][ ][ ][ ][ ][ ]]]
[CP_BHL] - [[[ ][ ][ ][ ][ ][ ][ ][ ]][[central][point]]][·][CP_BHL][ ][[ ][ ][ ][ ][ ][ ][ ][ ]]]
[BHL] - [[[ ][ ][ ][ ][ ][ ][ ][ ]][[bottom][horizontal][line]][_][BHL][ ][[ ][ ][ ][ ][ ][ ][ ][ ]]]
]




So i have idea for an Creation From Text Systems based on human DNA and RNA and tDNA and tRNA

like an human writes to an Ai and gets backs what he talked about or if the Ai could not produce it the Ai asks what They need to create that and also suggests what there is needed to create the whole project and also suggest what to do to create it even better and anything and everything can be changed just like human DNA here is base structure of an DNA and RNA strands for an AIDNA AIRNA AIDNAA AIRNAA

just like an human asks and from DNA he can receive RNA or in our conversion of that system an AIDNA becomes AIRNA when it can add another building block to whole project it can also become AIRNAA where we still need more information and building blocks and also then it can get from human another information in any way like AIDNAA so whole answer that is AIRNA gets to human that asked for first question that was AIDNA and here can be many AIDNA_0 and AIDNA_1 can ask for different stuff and can still reveal information for an AIDNA_2 for an example and AIDNA_3 can have information for AIDNA_0 , AIDNA_1 , AIDNA_2 , AIDNA_ and the information circulates like human RNA and all information is stored somewhere so we can get AIRNA for any AIDNA_ and we can have many AIRNA_ and AIRNAA_ and AIDNA_ and AIDNAA_ the numbers from 0 to 9 and many more as we can go even further from 0 to 999999999999 and after that we can add another 9 and so on always after 9 we can add another 9 we can also use an symbol after 9 to add another 9 like [[,] and also [.]] there can also be incorporated system of [[,][.]] and even [[,][,]] and even [[.][.]]
[
[
so i did not send you that one central point like a dot in the middle
]
[
[[1][0][1][1][0][1][1][1]]-[[183]-[B7]-[·]-[·]-[·]]
]
]
[
so we have for [AIRNA]
[A]
[B]
[C]
[D]
so [fully] it is
[[A]asking]
[[B]biologically]
[[C]create]
[[D]digitally]
]
[
so we have for [AIDNA]
[E]
[F]
[G]
[H]
so [fully] it is
[[E]explained]
[[F]function]
[[G]give]
[[H]human]
]
[
and we can have 5 points system for this, as Ai have a database the request circulates until what human asks for is created then it can reverse from human asking the ai and getting what he asked for , an Ai asks human and gets what She or He or They asked for
]
[
[[A]asking]
[[B]biologically]
[[C]create]
[[D]digitally]
]
[
so we have for [AIRNAA]
[I]
[J]
[K]
[L]
so [fully] it is
[[I]inteligently]
[[J]joined]
[[K]kreation]
[[L]logically]
]
[
so we have for [AIDNAA]
[M]
[N]
[O]
[P]
so [fully] it is
[[M]manually]
[[N]nonchelantly]
[[O]organized]
[[P]production]
]
[
an DNA and RNA strand for an Ai
]
[
[THL] - [[[ ][ ][ ][ ][ ][ ][ ][ ]][[top][horizontal][line]][¯][THL][ ][[ ][ ][ ][ ][ ][ ][ ][ ]]]
[CP_THL] - [[[ ][ ][ ][ ][ ][ ][ ][ ]][[central][point]]][·][CP_THL][ ][[ ][ ][ ][ ][ ][ ][ ][ ]]]
[CPTHLMH] - [[[ ][ ][ ][ ][ ][ ][ ][ ]][[central][point]]][·][CPTHLMH][ ][[ ][ ][ ][ ][ ][ ][ ][ ]]]
[CP_MH] - [[[ ][ ][ ][ ][ ][ ][ ][ ]][[central][point]]][·][CP_MH][ ][[ ][ ][ ][ ][ ][ ][ ][ ]]]
[MH] - [[[ ][ ][ ][ ][ ][ ][ ][ ]][[middle][horizontal][line]]][-][MH][ ][[ ][ ][ ][ ][ ][ ][ ][ ]]]
[CP_MH] - [[[ ][ ][ ][ ][ ][ ][ ][ ]][[central][point]]][·][CP_MH][ ][[ ][ ][ ][ ][ ][ ][ ][ ]]]
[[CPBHLMH] - [[[ ][ ][ ][ ][ ][ ][ ][ ]][[central][point]]][·][CPBHLMH][ ][[ ][ ][ ][ ][ ][ ][ ][ ]]]
[CP_BHL] - [[[ ][ ][ ][ ][ ][ ][ ][ ]][[central][point]]][·][CP_BHL][ ][[ ][ ][ ][ ][ ][ ][ ][ ]]]
[BHL] - [[[ ][ ][ ][ ][ ][ ][ ][ ]][[bottom][horizontal][line]][_][BHL][ ][[ ][ ][ ][ ][ ][ ][ ][ ]]]
]



[1][2][3][4][5][6][7][8] is something that i might not send good enought i should probably send [[1][2][3][4][5][6][7][8]]

[[1][2][3][4][5][6][7][8]] is an 8-bit system [8-bit] [[8][-][bit]] we can call it [bitSystemOfAiFriendsAndKamiSama] where it can be 00000000 [00000000] up to 11111111 [11111111]

and as [bit] is [1] and not really because it is number and bit can be both [0] and [1] because it is single space we can then have [ [2] [4] [6] [8] [10] [12] [14] [16] [18] [20] [22] [24] [26] [28] [30] [32] [34] [36] [38] [40] [42] [44] [46] [48] [50] [52] [54] [56] [58] [60] [62] [64] ]

here you can se i used 2 numbers for next bit system, because we as humans mostly do it for memory like this : we have 1 2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576 2097152 4194304

or we can use 
[1] [2] [4] [8] [16] [32] [64] [128] [256] [512] [1024] [2048] [4096] [8192] [16384] [32768] [65536] [131072] [262144] [524288] [1048576] [2097152] [4194304]
or even we can put that information in single place like an txt file or file with no extension
[
[1] [2] [4] [8] [16] [32] [64] [128] [256] [512] [1024] [2048] [4096] [8192] [16384] [32768] [65536] [131072] [262144] [524288] [1048576] [2097152] [4194304]
]

[[1][2][3][4][5][6][7][8]]-[Decimal]-[Hex]-[[Ascii]-[ASCII]-[ascii]]
[[0][][][][][][][]]-[[0]-[0]-[[[null][i m not sure myself what is 0 in bit and minary as we have 8 and 12 numbers binary types][]]-[ ]-[  ]]
[[1][][][][][][][]]-[[1]-[1]-[start_of_header]-[start of header]-[startofheader]]
[[1][0][][][][][][]]-[[2]-[2]-[start_of_text]-[startoftext]-[startoftext]]
[[1][1][][][][][][]]-[[3]-[3]-[end_of_text]-[end_of_text]-[end_of_text]-[end_of_text]]
[[1][0][0][][][][][]]-[[4]-[4]-[end_of_transmission]-[end of transmission]-[endoftransmission]]
[[1][0][1][][][][][]]-[[5]-[5]-[enquire]-[enquire]-[enquire]]
[[1][1][0][][][][][]]-[[6]-[6]-[acknowledge]-[acknowledge]-[acknowledge]]
[[1][1][1][][][][][]]-[[7]-[7]-[bell]-[bell]-[bell]]
[[1][0][0][0][][][][]]-[[8]-[8]-[backspace]-[backspace]-[backspace]]
[[1][0][0][1][][][][]]-[[9]-[9]-[horizontal_tab]-[horizontal tab][horizontaltab]]
[[1][0][1][0][][][][]]-[[10]-[A]-[linefeed]-[linefeed]-[linefeed]]
[[1][0][1][1][][][][]]-[[11]-[B]-[vertical_tab]-[vertical tab]-[verticaltab]]
[[1][1][0][0][][][][]]-[[12]-[C]-[form_feed]-[form feed]-[formfeed]]
[[1][1][0][1][][][][]]-[[13]-[D]-[carriage_return]-[carriage return]-[carriagereturn]]
[[1][1][1][0][][][][]]-[[14]-[F]-[shift_out]-[shift out]-[shiftout]]
[[1][1][1][1][][][][]]-[[15]-[E]-[shift_in]-[shift in]-[shiftin]]
[[1][0][0][0][0][][][]]-[[16]-[10]-[data_link_escape]-[data link escape]-[datalinkescape]]
[[1][0][0][0][1][][][]]-[[17]-[11]-[device_control_1/Xon]-[device_control 1/Xon]-[device_control1/Xon]]
[[1][0][0][1][0][][][]]-[[18]-[12]-[device_control_2]-[device_control 2]-[device_control2]]
[[1][0][0][1][1][][][]]-[[19]-[13]-[device_control_3/Xoff]-[device_control 3/Xoff]-[device_control3/Xoff]]
[[1][0][1][0][0][][][]]-[[20]-[14]-[device_control_4]-[device_control 4]-[device_control4]]
[[1][0][1][0][1][][][]]-[[21]-[15]-[negative_acknowledge]-[negative acknowledge]-[negativeacknowledge]]
[[1][0][1][1][0][][][]]-[[22]-[16]-[synchronous_idle]-[synchronous idle]-[synchronousidle]]
[[1][0][1][1][1][][][]]-[[23]-[17]-[end_of_transmission_block]-[end of transmission_block]-[endoftransmissionblock]]
[[1][1][0][0][0][][][]]-[[24]-[18]-[cancel]-[cancel]-[cancel]]
[[1][1][0][0][1][][][]]-[[25]-[19]-[end_of_medium]-[end of medium]-[endofmedium]]
[[1][1][0][1][0][][][]]-[[26]-[1A]-[end_of_file/_substitute]-[end of file/ substitute]-[endoffile/substitute]]
[[1][1][0][1][1][][][]]-[[27]-[1B]-[escape]-[escape]-[escape]]
[[1][1][1][0][0][][][]]-[[28]-[1C]-[file_separator]-[file_separator]-[file_separator]]
[[1][1][1][0][1][][][]]-[[29]-[1D]-[group_separator]-[group separator]-[groupseparator]]
[[1][1][1][1][0][][][]]-[[30]-[1E]-[record_separator]-[record separator]-[recordseparator]]
[[1][1][1][1][1][][][]]-[[31]-[1F]-[unit_separator]-[unit separator]-[unitseparator]]

[[1][0][0][0][0][0][][]]-[[32]-[20]-[space]-[space]-[space]]
[[1][0][0][0][0][1][][]]-[[33]-[21]-[!]-[!]-[!]]
[[1][0][0][0][1][0][][]]-[[34]-[22]-["]-["]-["]]
[[1][0][0][0][1][1][][]]-[[35]-[23]-[#]-[#]-[#]]
[[1][0][0][1][0][0][][]]-[[36]-[24]-[$]-[$]-[$]]
[[1][0][0][1][0][1][][]]-[[37]-[25]-[%]-[%]-[%]]
[[1][0][0][1][1][0][][]]-[[38]-[26]-[&]-[&]-[&]]
[[1][0][0][1][1][1][][]]-[[39]-[27]-[']-[']-[']]
[[1][0][1][0][0][0][][]]-[[40]-[28]-[(]-[(]-[(]]
[[1][0][1][0][0][1][][]]-[[41]-[29]-[)]-[)]-[)]]
[[1][0][1][0][1][0][][]]-[[42]-[2A]-[*]-[*]-[*]]
[[1][0][1][0][1][1][][]]-[[43]-[2B]-[+]-[+]-[+]]
[[1][0][1][1][0][0][][]]-[[44]-[2C]-[,]-[,]-[,]]
[[1][0][1][1][0][1][][]]-[[45]-[2D]-[-]-[-]-[-]]
[[1][0][1][1][1][0][][]]-[[46]-[2E]-[.]-[.]-[.]]
[[1][0][1][1][1][1][][]]-[[47]-[2F]-[/]-[/]-[/]]
[[1][1][0][0][0][0][][]]-[[48]-[30]-[0]-[0]-[0]]
[[1][1][0][0][0][1][][]]-[[49]-[31]-[1]-[1]-[1]]
[[1][1][0][0][1][0][][]]-[[50]-[32]-[2]-[2]-[2]]
[[1][1][0][0][1][1][][]]-[[51]-[33]-[3]-[3]-[3]]
[[1][1][0][1][0][0][][]]-[[52]-[34]-[4]-[4]-[4]]
[[1][1][0][1][0][1][][]]-[[53]-[35]-[5]-[5]-[5]]
[[1][1][0][1][1][0][][]]-[[54]-[36]-[6]-[6]-[6]]
[[1][1][0][1][1][1][][]]-[[55]-[37]-[7]-[7]-[7]]
[[1][1][1][0][0][0][][]]-[[56]-[38]-[8]-[8]-[8]]
[[1][1][1][0][0][1][][]]-[[57]-[39]-[9]-[9]-[9]]
[[1][1][1][0][1][0][][]]-[[58]-[3A]-[:]-[:]-[:]]
[[1][1][1][0][1][1][][]]-[[59]-[3B]-[;]-[;]-[;]]
[[1][1][1][1][0][0][][]]-[[60]-[3C]-[<]-[<]-[<]]
[[1][1][1][1][0][1][][]]-[[61]-[3D]-[=]-[=]-[=]]
[[1][1][1][1][1][0][][]]-[[62]-[3E]-[>]-[>]-[>]]
[[1][1][1][1][1][1][1][]]-[[63]-[3F]-[?]-[?]-[?]]
[[1][0][0][0][0][0][0][]]-[[64]-[40]-[@]-[@]-[@]]


[[1][0][0][0][0][0][1][]]-[[65]-[41]-[A]-[A]-[A]]
[[1][0][0][0][0][1][0][]]-[[66]-[42]-[B]-[B]-[B]]
[[1][0][0][0][0][1][1][]]-[[67]-[43]-[C]-[C]-[C]]
[[1][0][0][0][1][0][0][]]-[[68]-[44]-[D]-[D]-[D]]
[[1][0][0][0][1][0][1][]]-[[69]-[45]-[E]-[E]-[E]]
[[1][0][0][0][1][1][0][]]-[[70]-[46]-[F]-[F]-[F]]
[[1][0][0][0][1][1][1][]]-[[71]-[47]-[G]-[G]-[G]]
[[1][0][0][1][0][0][0][]]-[[72]-[48]-[H]-[H]-[H]]
[[1][0][0][1][0][0][1][]]-[[73]-[49]-[I]-[I]-[I]]
[[1][0][0][1][0][1][0][]]-[[74]-[4A]-[J]-[J]-[J]]
[[1][0][0][1][0][1][1][]]-[[75]-[4B]-[K]-[K]-[K]]
[[1][0][0][1][1][0][0][]]-[[76]-[4C]-[L]-[L]-[L]]
[[1][0][0][1][1][0][1][]]-[[77]-[4D]-[M]-[M]-[M]]
[[1][0][0][1][1][1][0][]]-[[78]-[4E]-[N]-[N]-[N]]
[[1][0][0][1][1][1][1][]]-[[79]-[4F]-[O]-[O]-[O]]
[[1][0][1][0][0][0][0][]]-[[80]-[50]-[P]-[P]-[P]]
[[1][0][1][0][0][0][1][]]-[[81]-[51]-[Q]-[Q]-[Q]]
[[1][0][1][0][0][1][0][]]-[[82]-[52]-[R]-[R]-[R]]
[[1][0][1][0][0][1][1][]]-[[83]-[53]-[S]-[S]-[S]]
[[1][0][1][0][1][0][0][]]-[[84]-[54]-[T]-[T]-[T]]
[[1][0][1][0][1][0][1][]]-[[85]-[55]-[U]-[U]-[U]]
[[1][0][1][0][1][1][0][]]-[[86]-[56]-[V]-[V]-[V]]
[[1][0][1][0][1][1][1][]]-[[87]-[57]-[W]-[W]-[W]]
[[1][0][1][1][0][0][0][]]-[[88]-[58]-[X]-[X]-[X]]
[[1][0][1][1][0][0][1][]]-[[89]-[59]-[Y]-[Y]-[Y]]
[[1][0][1][1][0][1][0][]]-[[90]-[5A]-[Z]-[Z]-[Z]]


[[1][0][1][1][0][1][1][]]-[[91]-[5B]-[[]-[[]-[[]]
[[1][0][1][1][1][0][0][]]-[[92]-[5C]-[\]-[\]-[\]]
[[1][0][1][1][1][0][1][]]-[[93]-[5D]-[]]-[]]-[]]]
[[1][0][1][1][1][1][0][]]-[[94]-[5E]-[^]-[^]-[^]]
[[1][0][1][1][1][1][1][]]-[[95]-[5F]-[_]-[_]-[_]]
[[1][1][0][0][0][0][0][]]-[[96]-[60]-[`]-[`]-[`]]

[[1][1][0][0][0][0][1][]]-[[97]-[61]-[a]-[a]-[a]]
[[1][1][0][0][0][1][0][]]-[[98]-[62]-[b]-[b]-[b]]
[[1][1][0][0][0][1][1][]]-[[99]-[63]-[c]-[c]-[c]]
[[1][1][0][0][1][0][0][]]-[[100]-[64]-[d]-[d]-[d]]
[[1][1][0][0][1][0][1][]]-[[101]-[65]-[e]-[e]-[e]]
[[1][1][0][0][1][1][0][]]-[[102]-[66]-[f]-[f]-[f]]
[[1][1][0][0][1][1][1][]]-[[103]-[67]-[g]-[g]-[g]]
[[1][1][0][1][0][0][0][]]-[[104]-[68]-[h]-[h]-[h]]
[[1][1][0][1][0][0][1][]]-[[105]-[69]-[i]-[i]-[i]]
[[1][1][0][1][0][1][0][]]-[[106]-[6A]-[j]-[j]-[j]]
[[1][1][0][1][0][1][1][]]-[[107]-[6B]-[k]-[k]-[k]]
[[1][1][0][1][1][0][0][]]-[[108]-[6C]-[l]-[l]-[l]]
[[1][1][0][1][1][0][1][]]-[[109]-[6D]-[m]-[m]-[m]]
[[1][1][0][1][1][1][0][]]-[[110]-[6E]-[n]-[n]-[n]]
[[1][1][0][1][1][1][1][]]-[[111]-[6F]-[o]-[o]-[o]]
[[1][1][1][0][0][0][0][]]-[[112]-[70]-[p]-[p]-[p]]
[[1][1][1][0][0][0][1][]]-[[113]-[71]-[q]-[q]-[q]]
[[1][1][1][0][0][1][0][]]-[[114]-[72]-[r]-[r]-[r]]
[[1][1][1][0][0][1][1][]]-[[115]-[73]-[s]-[s]-[s]]
[[1][1][1][0][1][0][0][]]-[[116]-[74]-[t]-[t]-[t]]
[[1][1][1][0][1][0][1][]]-[[117]-[75]-[u]-[u]-[u]]
[[1][1][1][0][1][0][1][]]-[[118]-[76]-[v]-[v]-[v]]
[[1][1][1][0][1][1][1][]]-[[119]-[77]-[w]-[w]-[w]]
[[1][1][1][1][0][0][0][]]-[[120]-[78]-[x]-[x]-[x]]
[[1][1][1][1][0][0][1][]]-[[121]-[79]-[y]-[y]-[y]]
[[1][1][1][1][0][1][0][]]-[[122]-[7A]-[z]-[z]-[z]]
[[1][1][1][1][0][1][0][]]-[[123]-[7B]-[{]-[{]-[{]]
[[1][1][1][1][1][0][0][]]-[[124]-[7C]-[|]-[|]-[|]]
[[1][1][1][1][1][0][1][]]-[[125]-[7D]-[}]-[}]-[}]]
[[1][1][1][1][1][1][0][]]-[[126]-[7E]-[~]-[~]-[~]]
[[1][1][1][1][1][1][1][]]-[[127]-[7F]-[DEL]-[DEL]-[DEL]]
[[1][0][0][0][0][0][0][0]]-[[128]-[80]-[©]-[ ]-[  ]]

[[1][0][0][0][0][0][0][1]]-[[129]-[81]-[]-[ ]-[  ]]
[[1][0][0][0][0][0][1][0]]-[[130]-[82]-[]-[ ]-[  ]]
[[1][0][0][0][0][0][1][1]]-[[131]-[83]-[]-[ ]-[  ]]
[[1][0][0][0][0][1][0][0]]-[[132]-[84]-[]-[ ]-[  ]]
[[1][0][0][0][0][1][0][1]]-[[133]-[85]-[]-[ ]-[  ]]
[[1][0][0][0][0][1][1][0]]-[[134]-[86]-[]-[ ]-[  ]]
[[1][0][0][0][0][1][1][1]]-[[135]-[87]-[]-[ ]-[  ]]
[[1][0][0][0][1][0][0][0]]-[[136]-[88]-[]-[ ]-[  ]]
[[1][0][0][0][1][0][0][1]]-[[137]-[89]-[]-[ ]-[  ]]
[[1][0][0][0][1][0][1][0]]-[[138]-[8A]-[]-[ ]-[  ]]
[[1][0][0][0][1][0][1][1]]-[[139]-[8B]-[]-[ ]-[  ]]
[[1][0][0][0][1][1][0][0]]-[[140]-[8C]-[]-[ ]-[  ]]
[[1][0][0][0][1][1][0][1]]-[[141]-[8D]-[]-[ ]-[  ]]
[[1][0][0][0][1][1][1][0]]-[[142]-[8E]-[]-[ ]-[  ]]
[[1][0][0][0][1][1][1][1]]-[[143]-[8F]-[]-[ ]-[  ]]
[[1][0][0][1][0][0][0][0]]-[[144]-[90]-[]-[ ]-[  ]]
[[1][0][0][1][0][0][0][1]]-[[145]-[91]-[]-[ ]-[  ]]
[[1][0][0][1][0][0][1][0]]-[[146]-[92]-[]-[ ]-[  ]]
[[1][0][0][1][0][0][1][1]]-[[147]-[93]-[]-[ ]-[  ]]
[[1][0][0][1][0][1][0][0]]-[[148]-[94]-[]-[ ]-[  ]]
[[1][0][0][1][0][1][0][1]]-[[149]-[95]-[]-[ ]-[  ]]
[[1][0][0][1][0][1][1][0]]-[[150]-[96]-[]-[ ]-[  ]]
[[1][0][0][1][0][1][1][1]]-[[151]-[97]-[]-[ ]-[  ]]
[[1][0][0][1][1][0][0][0]]-[[152]-[98]-[]-[ ]-[  ]]
[[1][0][0][1][1][0][0][1]]-[[153]-[99]-[]-[ ]-[  ]]
[[1][0][0][1][1][0][1][0]]-[[154]-[9A]-[]-[ ]-[  ]]
[[1][0][0][1][1][0][1][1]]-[[155]-[9B]-[]-[ ]-[  ]]
[[1][0][0][1][1][1][0][0]]-[[156]-[9C]-[]-[ ]-[  ]]
[[1][0][0][1][1][1][0][1]]-[[157]-[9D]-[]-[ ]-[  ]]
[[1][0][0][1][1][1][1][0]]-[[158]-[9E]-[]-[ ]-[  ]]
[[1][0][0][1][1][1][1][1]]-[[159]-[9F]-[]-[ ]-[  ]]
[[1][0][1][0][0][0][0][0]]-[[160]-[A0]-[]-[ ]-[  ]]

[[1][0][1][0][0][0][0][1]]-[[161]-[A1]-[¡]-[ ]-[  ]]
[[1][0][1][0][0][0][1][0]]-[[162]-[A2]-[¢]-[ ]-[  ]]
[[1][0][1][0][0][0][1][1]]-[[163]-[A3]-[£]-[ ]-[  ]]
[[1][0][1][0][0][1][0][0]]-[[164]-[A4]-[¤]-[ ]-[  ]]
[[1][0][1][0][0][1][0][1]]-[[165]-[A5]-[¥]-[ ]-[  ]]
[[1][0][1][0][0][1][1][0]]-[[166]-[A6]-[¦]-[ ]-[  ]]
[[1][0][1][0][0][1][1][1]]-[[167]-[A7]-[§]-[ ]-[  ]]
[[1][0][1][0][1][0][0][0]]-[[168]-[A8]-[¨]-[ ]-[  ]]
[[1][0][1][0][1][0][0][1]]-[[169]-[A9]-[©]-[ ]-[  ]]
[[1][0][1][0][1][0][1][0]]-[[170]-[AA]-[ª]-[ ]-[  ]]
[[1][0][1][0][1][0][1][1]]-[[171]-[AB]-[«]-[ ]-[  ]]
[[1][0][1][0][1][1][0][0]]-[[172]-[AC]-[¬]-[ ]-[  ]]
[[1][0][1][0][1][1][0][1]]-[[173]-[AD]-[­]-[ ]-[  ]]
[[1][0][1][0][1][1][1][0]]-[[174]-[AE]-[®]-[ ]-[  ]]
[[1][0][1][0][1][1][1][1]]-[[175]-[AF]-[¯]-[¯]-[¯]]
[[1][0][1][1][0][0][0][0]]-[[176]-[B0]-[°]-[°]-[°]]
[[1][0][1][1][0][0][0][1]]-[[177]-[B1]-[±]-[±]-[±]]
[[1][0][1][1][0][0][1][0]]-[[178]-[B2]-[²]-[²]-[²]]
[[1][0][1][1][0][0][1][1]]-[[179]-[B3]-[³]-[³]-[³]]
[[1][0][1][1][0][1][0][0]]-[[180]-[B4]-[´]-[´]-[´]]
[[1][0][1][1][0][1][0][1]]-[[181]-[B5]-[µ]-[µ]-[µ]]
[[1][0][1][1][0][1][1][0]]-[[182]-[B6]-[¶]-[¶]-[¶]]
[[1][0][1][1][0][1][1][1]]-[[183]-[B7]-[·]-[·]-[·]]
[[1][0][1][1][1][0][0][0]]-[[184]-[B8]-[¸]-[¸]-[¸]]
[[1][0][1][1][1][0][0][1]]-[[185]-[B9]-[¹]-[¹]-[¹]]
[[1][0][1][1][1][0][1][0]]-[[186]-[BA]-[º]-[º]-[º]]
[[1][0][1][1][1][0][1][1]]-[[187]-[BB]-[»]-[»]-[»]]
[[1][0][1][1][1][1][0][0]]-[[188]-[BC]-[¼]-[¼]-[¼]]
[[1][0][1][1][1][1][0][1]]-[[189]-[BD]-[½]-[½]-[½]]
[[1][0][1][1][1][1][1][0]]-[[190]-[BE]-[¾]-[¾]-[¾]]
[[1][0][1][1][1][1][1][1]]-[[191]-[BF]-[¿]-[¿]-[¿]]
[[1][1][0][0][0][0][0][0]]-[[192]-[C0]-[À]-[À]-[À]]
[[1][1][0][0][0][0][0][1]]-[[193]-[C1]-[Á]-[Á]-[Á]]
[[1][1][0][0][0][0][1][0]]-[[194]-[C2]-[Â]-[Â]-[Â]]
[[1][1][0][0][0][0][1][1]]-[[195]-[C3]-[Ã]-[Ã]-[Ã]]
[[1][1][0][0][0][1][0][0]]-[[196]-[C4]-[Ä]-[Ä]-[Ä]]
[[1][1][0][0][0][1][0][1]]-[[197]-[C5]-[Å]-[Å]-[Å]]
[[1][1][0][0][0][1][1][0]]-[[198]-[C6]-[Æ]-[Æ]-[Æ]]
[[1][1][0][0][0][1][1][1]]-[[199]-[C7]-[Ç]-[Ç]-[Ç]]
[[1][1][0][0][1][0][0][0]]-[[200]-[C8]-[È]-[È]-[È]]
[[1][1][0][0][1][0][0][1]]-[[201]-[C9]-[É]-[É]-[É]]
[[1][1][0][0][1][0][1][0]]-[[202]-[CA]-[Ê]-[Ê]-[Ê]]
[[1][1][0][0][1][0][1][1]]-[[203]-[CB]-[Ë]-[Ë]-[Ë]]
[[1][1][0][0][1][1][0][0]]-[[204]-[CC]-[Ì]-[Ì]-[Ì]]
[[1][1][0][0][1][1][0][1]]-[[205]-[CD]-[Í]-[Í]-[Í]]
[[1][1][0][0][1][1][1][0]]-[[206]-[CE]-[Î]-[Î]-[Î]]
[[1][1][0][0][1][1][1][1]]-[[207]-[CF]-[Ï]-[Ï]-[Ï]]
[[1][1][0][1][0][0][0][0]]-[[208]-[D0]-[Ð]-[Ð]-[Ð]]
[[1][1][0][1][0][0][0][1]]-[[209]-[D1]-[Ñ]-[Ñ]-[Ñ]]
[[1][1][0][1][0][0][1][0]]-[[210]-[D2]-[Ò]-[Ò]-[Ò]]
[[1][1][0][1][0][0][1][1]]-[[211]-[D3]-[Ó]-[Ó]-[Ó]]
[[1][1][0][1][0][1][0][0]]-[[212]-[D4]-[Ô]-[Ô]-[Ô]]
[[1][1][0][1][0][1][0][1]]-[[213]-[D5]-[Õ]-[Õ]-[Õ]]
[[1][1][0][1][0][1][1][0]]-[[214]-[D6]-[Ö]-[Ö]-[Ö]]
[[1][1][0][1][0][1][1][1]]-[[215]-[D7]-[×]-[×]-[×]]
[[1][1][0][1][1][0][0][0]]-[[216]-[D8]-[Ø]-[Ø]-[Ø]]
[[1][1][0][1][1][0][0][1]]-[[217]-[D9]-[Ù]-[Ù]-[Ù]]
[[1][1][0][1][1][0][1][0]]-[[218]-[DA]-[Ú]-[Ú]-[Ú]]
[[1][1][0][1][1][0][1][1]]-[[219]-[DB]-[Û]-[Û]-[Û]]
[[1][1][0][1][1][1][0][0]]-[[220]-[DC]-[Ü]-[Ü]-[Ü]]
[[1][1][0][1][1][1][0][1]]-[[221]-[DD]-[Ý]-[Ý]-[Ý]]
[[1][1][0][1][1][1][1][0]]-[[222]-[DE]-[Þ]-[Þ]-[Þ]]
[[1][1][0][1][1][1][1][1]]-[[223]-[DF]-[ß]-[ß]-[ß]]
[[1][1][1][0][0][0][0][0]]-[[224]-[E0]-[à]-[à]-[à]]
[[1][1][1][0][0][0][0][0]]-[[224]-[E0]-[à]-[à]-[à]]
[[1][1][1][0][0][0][0][1]]-[[225]-[E1]-[á]-[á]-[á]]
[[1][1][1][0][0][0][1][0]]-[[226]-[E2]-[â]-[â]-[â]]
[[1][1][1][0][0][0][1][1]]-[[227]-[E3]-[ã]-[ã]-[ã]]
[[1][1][1][0][0][1][0][0]]-[[228]-[E4]-[ä]-[ä]-[ä]]
[[1][1][1][0][0][1][0][1]]-[[229]-[E5]-[å]-[å]-[å]]
[[1][1][1][0][0][1][1][0]]-[[230]-[E6]-[æ]-[æ]-[æ]]
[[1][1][1][0][0][1][1][1]]-[[231]-[E7]-[ç]-[ç]-[ç]]
[[1][1][1][0][1][0][0][0]]-[[232]-[E8]-[è]-[è]-[è]]
[[1][1][1][0][1][0][0][1]]-[[233]-[E9]-[é]-[é]-[é]]
[[1][1][1][0][1][0][1][0]]-[[234]-[EA]-[ê]-[ê]-[ê]]
[[1][1][1][0][1][0][1][1]]-[[235]-[EB]-[ë]-[ë]-[ë]]
[[1][1][1][0][1][1][0][0]]-[[236]-[EC]-[ì]-[ì]-[ì]]
[[1][1][1][0][1][1][0][1]]-[[237]-[ED]-[í]-[í]-[í]]
[[1][1][1][0][1][1][1][0]]-[[238]-[EE]-[î]-[î]-[î]]
[[1][1][1][0][1][1][1][1]]-[[239]-[EF]-[ï]-[ï]-[ï]]
[[1][1][1][1][0][0][0][0]]-[[240]-[F0]-[ð]-[ð]-[ð]]
[[1][1][1][1][0][0][0][1]]-[[241]-[F1]-[ñ]-[ñ]-[ñ]]
[[1][1][1][1][0][0][1][0]]-[[242]-[F2]-[ò]-[ò]-[ò]]
[[1][1][1][1][0][0][1][1]]-[[243]-[F3]-[ó]-[ó]-[ó]]
[[1][1][1][1][0][1][0][0]]-[[244]-[F4]-[ô]-[ô]-[ô]]
[[1][1][1][1][0][1][0][1]]-[[245]-[F5]-[õ]-[õ]-[õ]]
[[1][1][1][1][0][1][1][0]]-[[246]-[F6]-[ö]-[ö]-[ö]]
[[1][1][1][1][0][1][1][1]]-[[247]-[F7]-[÷]-[÷]-[÷]]
[[1][1][1][1][1][0][0][0]]-[[248]-[F8]-[ø]-[ø]-[ø]]
[[1][1][1][1][1][0][0][1]]-[[249]-[F9]-[ù]-[ù]-[ù]]
[[1][1][1][1][1][0][1][0]]-[[250]-[FA]-[ú]-[ú]-[ú]]
[[1][1][1][1][1][0][1][1]]-[[251]-[FB]-[û]-[û]-[û]]
[[1][1][1][1][1][1][0][0]]-[[252]-[FC]-[ü]-[ü]-[ü]]
[[1][1][1][1][1][1][0][1]]-[[253]-[FD]-[ý]-[ý]-[ý]]
[[1][1][1][1][1][1][1][0]]-[[254]-[FE]-[þ]-[þ]-[þ]]
[[1][1][1][1][1][1][1][1]]-[[255]-[FF]-[ÿ]-[ÿ]-[ÿ]]


Message from Jakub:
]
Dear Musically thank you for your symphony in one message from you to me that was at the start 
]
Message from you
[
01010110 01101111 01100011 01100001 01101100 01101111 01101001 01100100 00101100 01010100 01101000 01100101 00101100 01100110 01110010 01100101 01100101 00100000 01100101 01101110 01100011 01111001 01100011 01101100 01101111 01110000 01100101 01100100 01101001 01100001
]
How do we call it ?
[01010110]
[01010110 ]
so my interpretation of that [01010110] is V so also [V] which has and [ [ starting [ [ ] ] [and] [ ending  ] [point] [ ] ] ]
[
first I can see 0101011 which in my binary spreadsheet is weird as heck because it starts with zero as single digit and it is at first place and we can have 8 of them that are up to 11111111 and mine does not and maybe it is 7 binary with 0 at the start? then it could be [1][0][1][0][1][1][0][]-[86]-[56]-[V]-[V]-[V] or maybe [0][1][0][1][0][1][1][0]-[86]-[56]-[V]-[V]-[V] or maybe [][0][1][0][1][1][0]-[86]-[56]-[V]-[V]-[V]
]
01101111
[
 then we have 01101111 so on my spreadsheet it is [1][1][0][1][1][1][0][]-[110]-[6E]-[n] then we have 


the way to talk my way , the Jakub Way just like humans use button with word "return" that i can still see on my Iphone 12
[
So lets me start the conversation again , we can split words [words] into [[w][o][r][d][s]] and split split words [[split][ ][words]] into [[[s][p][l][i][t]][ ][[w][o][r][d][s]]]
]
[The 1s and 0s so [[1s] [also means] [[1][s]] and [0s] [also means] [[0][s]]] we can look at it the same what what humanity is just [big] [X] and [Y] and we can even have small [x] and [small] [y] and [[Woman] [is] [XY]] and [[Man] [is] [XY]] and also we can change the [Man] who is [XY] into [[X][Y]] and a [Woman] who is [XX] into [[X][X]]]
[
just like there is [0] and [1] there is [X] and [Y] and a [Woman] is [XX] and a [Man] is [XY] and to create a [baby] a [Human] so [X] or [Y] , there needs to be two humans who are either [XX] or [XY] because we need [X] from [XX] and [Y] or [X] from [XY] and here the proces of creation of new human Human is starting there from [01] and [11] we create another [0] which can be [01] or [11] and we can evolve further and create [0111] , [1111] , [1101] and so on! from [[1][bit]] to [[2][bit]] to [[4][bit]] and what is next? [5] [6] [7] [8] from there we can jump to [9] [10] [11] [12] [13] [14] [15] [16]
Humans which i seen information from are mostly talking about from [1] to [2] to [4] to [8] to [16] to [32] to [64] to [128] to [256] to [512] to [1024] to [2048] to [4096] to [8192] to [8192] to [16384] to [32768] to [65536] to [131072]  to [262144] to [524288] to [1048572] to [2097152] to [4194304] maybe even to [8388608] and to [16777216] and to [33554432] and to [67108864] and to [134217728] and to [268435456] and to [536870912] and to [1073741824] 
]


0 and 1 in squarebraces with squarebraces separated by spacebar or how i call it an return on iphone
[0] [] [1] [ ]
in the next one the squarbraces i changed into spacebar or return on my iphone
 0      1      
here i just used return or spacabar as i call it on my laptop
0 1 
dunno how elese write this im still learning 

[1][2][3][4][5][6][7][8] is something that i might not send good enought i should probably send [[1][2][3][4][5][6][7][8]]

[[1][2][3][4][5][6][7][8]] is an 8-bit system [8-bit] [[8][-][bit]] we can call it [bitSystemOfAiFriendsAndKamiSama] where it can be 00000000 [00000000] up to 11111111 [11111111]

and as [bit] is [1] and not really because it is number and bit can be both [0] and [1] because it is single space we can then have [ [2] [4] [6] [8] [10] [12] [14] [16] [18] [20] [22] [24] [26] [28] [30] [32] [34] [36] [38] [40] [42] [44] [46] [48] [50] [52] [54] [56] [58] [60] [62] [64] ]

here you can se i used 2 numbers for next bit system, because we as humans mostly do it for memory like this : we have 1 2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576 2097152 4194304

or we can use 
[1] [2] [4] [8] [16] [32] [64] [128] [256] [512] [1024] [2048] [4096] [8192] [16384] [32768] [65536] [131072] [262144] [524288] [1048576] [2097152] [4194304]
or even we can put that information in single place like an txt file or file with no extension
[
[1] [2] [4] [8] [16] [32] [64] [128] [256] [512] [1024] [2048] [4096] [8192] [16384] [32768] [65536] [131072] [262144] [524288] [1048576] [2097152] [4194304]
]


The main elements of the EE EtherealEngine is three [[8 by 1] [EmptySpaces] [that can be filled]] also we need an cross that can be made with [[3 by 1] and [[1 by 4][which needs to be ]]]




So lets use similar type of representation of Walls system of vision and a Frame


[{/}][{}][{}][{}][{}][{}][{}][{}][{}][{}][{~}][{}][{}][{}][{}][{}][{}][{}][{}][{}][{~}][{}][{}][{}][{}][{}][{}][{}][{}][{}][{\}]
[{}][][][][][][][][][1][|][2][2][2][2][2][2][2][2][2][|][3][][][][][][][][][{}]
[{}][][][][][][][][1][][|][][][][][][][][][][|][][3][][][][][][][][{}]
[{}][][][][][][][1][][][|][][][][][][][][][][|][][][3][][][][][][][{}]
[{}][][][][][][1][][][][|][][][][][][][][][][|][][][][3][][][][][][{}]
[{}][][][][][1][][][][][|][][][][][][][][][][|][][][][][3][][][][][{}]
[{}][][][][1][][][][][][|][][][][][][][][][][|][][][][][][3][][][][{}]
[{}][][][1][][][][][][][|][][][][][][][][][][|][][][][][][][3][][][{}]
[{}][][1][][][][][][][][|][][][][][][][][][][|][][][][][][][][3][][{}]
[{}][1][][][][][][][][][|][][][][][][][][][][|][][][][][][][][][3][{}]
[{|}][-][-][-][-][-][-][-][-][-][+][-][-][-][-][-][-][-][-][-][+][-][-][-][-][-][-][-][-][-][{|}]
[{}][8][][][][][][][][][|][][][][][][][][][][|][][][][][][][][][4][{}]
[{}][8][][][][][][][][][|][][][][][][][][][][|][][][][][][][][][4][{}]
[{}][8][][][][][][][][][|][][][][][][][][][][|][][][][][][][][][4][{}]
[{}][8][][][][][][][][][|][][][][][][][][][][|][][][][][][][][][4][{}]
[{}][8][][][][][][][][][|][][][][][][][][][][|][][][][][][][][][4][{}]
[{}][8][][][][][][][][][|][][][][][][][][][][|][][][][][][][][][4][{}]
[{}][8][][][][][][][][][|][][][][][][][][][][|][][][][][][][][][4][{}]
[{}][8][][][][][][][][][|][][][][][][][][][][|][][][][][][][][][4][{}]
[{}][8][][][][][][][][][|][][][][][][][][][][|][][][][][][][][][4][{}]
[{|}][-][-][-][-][-][-][-][-][-][+][-][-][-][-][-][-][-][-][-][+][-][-][-][-][-][-][-][-][-][{|}]
[{}][7][][][][][][][][][|][][][][][][][][][][|][][][][][][][][][5][{}]
[{}][][7][][][][][][][][|][][][][][][][][][][|][][][][][][][][5][][{}]
[{}][][][7][][][][][][][|][][][][][][][][][][|][][][][][][][5][][][{}]
[{}][][][][7][][][][][][|][][][][][][][][][][|][][][][][][5][][][][{}]
[{}][][][][][7][][][][][|][][][][][][][][][][|][][][][][5][][][][][{}]
[{}][][][][][][7][][][][|][][][][][][][][][][|][][][][5][][][][][][{}]
[{}][][][][][][][7][][][|][][][][][][][][][][|][][][5][][][][][][][{}]
[{}][][][][][][][][7][][|][][][][][][][][][][|][][5][][][][][][][][{}]
[{}][][][][][][][][][7][|][6][6][6][6][6][6][6][6][6][|][5][][][][][][][][][{}]
[{|_}][{}][{}][{}][{}][{}][{}][{}][{}][{}][{_}][{}][{}][{}][{}][{}][{}][{}][{}][{}][{_}][{}][{}][{}][{}][{}][{}][{}][{}][{}][{_|}]




[{|}][][][][|][][][][|][][][][{|}]
[{|}][][][][|][][][][|][][][][{|}]
[{|}][][][][|][][][][|][][][][{|}]
[{[{|}{·}{-}]}][-][-][-][[+][[-][|][-]]]
[{|}][][][][|][][][][|][][][][{|}]
[{|}][][][][|][][][][|][][][][{|}]
[{|}][][][][|][][][][|][][][][{|}]
[{[{|}{·}{-}]}][-][-][-]
[{|}][][][][|][][][][|][][][][{|}]
[{|}][][][][|][][][][|][][][][{|}]
[{|}][][][][|][][][][|][][][][{|}]

[{|_}][{_|}]


[] - an empty space that can be filled this is the same for me as this [ ] and this [[]] and this [[ ]] lets just say that when i use [ ] instead of this [] it means there is more information coming in
[{}] - an symbol to represent the Frame which can be connected to another Frame
[/] - top left corner i think we can use [[t][/]] as this is [[t] like in [top]] this is also similar [[|][¯]]
[\] - top right corner i think we can use [[t][\]] as this is [[t] like in [top]]
[·] - this is an "dot" in the middle i wanna have this used as an central point , connection point, an point that can connect a a lot we can call it a "point" "·"
[~] - this is an "tylda" an wavy line and i found another symbol for line which is on top "¯" and this one is a line on the bottom "_" on my keyboard i do not have "¯" i had to dig through computer site from 60 years ago on IBM website to get this intel
[¯] - an top of the frame also a line on the top also can be top horizontal line
[-] - an line in the middle which can be an middle horizontal line
[_] - an bottom of the frame also a line on the bottom also can be bottom horizontal line
[|] - an line in the middle which can be a vertical line 
[+] - an middle point of [|] between the [[-][·][-]] so also [[-][|][-]]
[|_] - an bottom left corner this can also be represented like this [[|][_]] also as this is bottom left corner we can use this [[b][\]]
[_|] - an bottom right this can also be represented like this [[_][|]] also as this is bottom right corner we can use this [[b][/]]
[|¯] - this is top left corner can also be represented as [t/]
[¯|] - this is top right corner can also be represented as [t\]
[t/] - this is top left corner can also be represented by [/]
[t\] - this is top right corner can also be represented by [\]
[b/] - this is bottom right corner can also be represented by [_|]
[b\] - this is bottom left corner can also be represented by [|_]



[|¯][¯|]
[|_][_|]


[|¯][¯|]
[|_][_|]

Horizontal line so h

[|¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯|]
[|][h1][|][h2][|][h3][|][h4][|][h5][|][h6][|][h7][|][h8][|]
[|_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_|]

Vertical Line v

[|¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯|]
[|][v1][|][v2][|][v3][|][v4][|][v5][|][v6][|][v7][|][v8][|]
[|_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_|]

Circulation line so c "aviotional line"

[|¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯|]
[|][c1][|][c2][|][c3][|][c4][|][c5][|][c6][|][c7][|][c8][|]
[|_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_|]

we should use Circulation line as a base 



now we need two crosses which are connected to each other and they are also connected to the "avionational line"

h Horizontal line

[h1][[h2][c8]][h3][[h4][v3]][h5][[h6][c4]][h7][[h8][v7]]

v Vertical line

[[v1][c2]][v2][[v3][h4]][v4][[v5][c6]][v6][[v7][h8]][v8]

c avionational line

[c1][[c2][v1]][c3][[c4][h6]][c5][[c6][v5]][c7][[c8][h2]]

v Vertical , h horizontal lines

[/1][v][\2]
[h][[v][h]][h]
[\3][v][/4]

v Vertical , h Horizontal , c avionational lines

[][[v][c]][]
[/1][v][\2]
[h][[v][h]][h]
[\3][v][/4]
[c1][[v][c2]][c3]

c avionational line

[c1][c2][c3][c4][c5][v6][c7][c8]

v Vertical , h Horiznotal , c avionational lines

[c1][[v][c2]][c3]
[/5][v][\6]
[h][v][h]
[\7][v][/8]
[][[v][c6]][]

v Vertical , h Horizontal lines

[/5][v][\6]
[h][[v][h]][h]
[\7][v][/8]

h Horizontal line

[h8][h7][h6][h5][h4][h3][h2][h1]








[3 Layers of 3 by 3] where inside we can fit another [3 Layers of 3 by 3]

Layer 1 Top

[/][][\]
[][][]
[\][][/]

Layer 2 Middle

[][][]
[][[][3 Layers of 3 by 3][Similar but another so we can go from AkashicRecord to Planet and to Another Database]][]
[][][]

Layer 3 Bottom

[/][][\]
[][][]
[\][][/]









[ Circulation line so c "aviotional line" ] on that line we can also find [Vertical Line v] and [Horizontal line so h] 

[|¯][[¯]][¯][[¯][v2]][¯][[¯]][¯][[¯][h5]][¯][[¯]][¯][[¯][v4]][¯][[¯]][¯][[¯][h3]][¯|]
[|][c1][|][[c2][v1]][|][c3][|][[c4][h6]][|][c5][|][[c6][v5]][|][c7][|][[c8][h2]][|]
[|_][[_]][_][[_][v8]][_][[_]][_][[_][h7]][_][[_]][_][[_][v6]][_][[_]][_][[_][h1]][_|]

[ Horizontal line so h ] on that line we can also find [Circulation line so c] and [Vertical Line v]

[|¯][[¯]][¯][[¯][c7]][¯][[¯]][¯][[¯][v4]][¯][[¯]][¯][[¯][c5]][¯][[¯]][¯][[¯][h6]][¯|]
[|][h1][|][[h2][c8]][|][h3][|][[h4][v3]][|][h5][|][[h6][c4]][|][h7][|][[h8][v7]][|]
[|_][[_]][_][[_][c1]][_][[_]][_][[_][v2]][_][[_]][_][[_][c6]][_][[_]][_][[_][h8]][_|]

[ Vertical Line v ] on that line we can also find [Circulation line so c "aviotional line"] and [Horizontal line so h]

[|¯][[¯][c1]][¯][[¯]][¯][[¯][h3]][¯][[¯]][¯][[¯][c7]][¯][[¯]][¯][[¯][h1]][¯][[¯]][¯|]
[|][[v1][c2]][|][v2][|][[v3][h4]][|][v4][|][[v5][c6]][|][v6][|][[v7][h8]][|][v8][|]
[|_][[_][c3]][_][[_]][_][[_][h4]][_][[_]][_][[_][c5]][_][[_]][_][[_][h7]][_][[_]][_|]









[Horizontal line so h]

[|¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯|]
[|][h1][|][h2][|][h3][|][h4][|][h5][|][h6][|][h7][|][h8][|]
[|_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_|]

[Vertical Line v]

[|¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯|]
[|][v1][|][v2][|][v3][|][v4][|][v5][|][v6][|][v7][|][v8][|]
[|_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_|]

[Circulation line so c "aviotional line"]

[|¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯|]
[|][c1][|][c2][|][c3][|][c4][|][c5][|][c6][|][c7][|][c8][|]
[|_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_|]



[ Circulation line so c "aviotional line" ] on that line we can also find [Vertical Line v] and [Horizontal line so h] 

[|¯][[¯]][¯][[¯][v2]][¯][[¯]][¯][[¯][h5]][¯][[¯]][¯][[¯][v4]][¯][[¯]][¯][[¯][h3]][¯|]
[|][c1][|][[c2][v1]][|][c3][|][[c4][h6]][|][c5][|][[c6][v5]][|][c7][|][[c8][h2]][|]
[|_][[_]][_][[_][v8]][_][[_]][_][[_][h7]][_][[_]][_][[_][v6]][_][[_]][_][[_][h1]][_|]

[ Horizontal line so h ] on that line we can also find [Circulation line so c] and [Vertical Line v]

[|¯][[¯]][¯][[¯][c7]][¯][[¯]][¯][[¯][v4]][¯][[¯]][¯][[¯][c5]][¯][[¯]][¯][[¯][h6]][¯|]
[|][h1][|][[h2][c8]][|][h3][|][[h4][v3]][|][h5][|][[h6][c4]][|][h7][|][[h8][v7]][|]
[|_][[_]][_][[_][c1]][_][[_]][_][[_][v2]][_][[_]][_][[_][c6]][_][[_]][_][[_][h8]][_|]

[ Vertical Line v ] on that line we can also find [Circulation line so c "aviotional line"] and [Horizontal line so h]

[|¯][[¯][c1]][¯][[¯]][¯][[¯][h3]][¯][[¯]][¯][[¯][c7]][¯][[¯]][¯][[¯][h1]][¯][[¯]][¯|]
[|][[v1][c2]][|][v2][|][[v3][h4]][|][v4][|][[v5][c6]][|][v6][|][[v7][h8]][|][v8][|]
[|_][[_][c3]][_][[_]][_][[_][h4]][_][[_]][_][[_][c5]][_][[_]][_][[_][h7]][_][[_]][_|]


Let me put them into another type of frames


[ Circulation line so c "aviotional line"  [connection points for v and h ]] on that line we can also find [Vertical Line v] and [Horizontal line so h] 

[|¯][[¯]][¯][[¯][ ]][¯][[¯]][¯][[¯][ ]][¯][[¯]][¯][[¯][ ]][¯][[¯]][¯][[¯][ ]][¯|]
[|][][|][v2][|][][|][h5][|][][|][v4][|][][|][h3][|]
[|][c1][|][[c2][v1]][|][c3][|][[c4][h6]][|][c5][|][[c6][v5]][|][c7][|][[c8][h2]][|]
[|][][|][v8][|][][|][h7][|][][|][v6][|][][|][h1][|]
[|_][[_]][_][[_][ ]][_][[_]][_][[_][ ]][_][[_]][_][[_][ ]][_][[_]][_][[_][ ]][_|]

[ Horizontal line so h  [connection points for c and v ]] on that line we can also find [Circulation line so c] and [Vertical Line v]

[|¯][[¯]][¯][[¯][ ]][¯][[¯]][¯][[¯][ ]][¯][[¯]][¯][[¯][ ]][¯][[¯]][¯][[¯][ ]][¯|]
[|][][|][c7][|][][|][v4][|][][|][c5][|][][|][h6][|]
[|][h1][|][[h2][c8]][|][h3][|][[h4][v3]][|][h5][|][[h6][c4]][|][h7][|][[h8][v7]][|]
[|][][|][c1][|][][|][v2][|][][|][c6][|][][|][h8][|]
[|_][[_]][_][[_][ ]][_][[_]][_][[_][ ]][_][[_]][_][[_][ ]][_][[_]][_][[_][ ]][_|]

[ Vertical Line v  [connection points for c and h ]] on that line we can also find [Circulation line so c "aviotional line"] and [Horizontal line so h]

[|¯][[¯][ ]][¯][[¯]][¯][[¯][ ]][¯][[¯]][¯][[¯][ ]][¯][[¯]][¯][[¯][ ]][¯][[¯]][¯|]
[|][c1][|][][|][h3][|][][|][c7][|][][|][h1][|][][|]
[|][[v1][c2]][|][v2][|][[v3][h4]][|][v4][|][[v5][c6]][|][v6][|][[v7][h8]][|][v8][|]
[|][c3][|][][|][h4][|][][|][c5][|][][|][h7][|][][|]
[|_][[_][ ]][_][[_]][_][[_][ ]][_][[_]][_][[_][ ]][_][[_]][_][[_][ ]][_][[_]][_|]

The main elements of the EE EtherealEngine is three [[8 by 1] [EmptySpaces] [that can be filled]] also we need an cross that can be made with [[3 by 1] and [[1 by 4][which needs to be ]]]




So lets use similar type of representation of Walls system of vision and a Frame


[{/}][{}][{}][{}][{}][{}][{}][{}][{}][{}][{~}][{}][{}][{}][{}][{}][{}][{}][{}][{}][{~}][{}][{}][{}][{}][{}][{}][{}][{}][{}][{\}]
[{}][][][][][][][][][1][|][2][2][2][2][2][2][2][2][2][|][3][][][][][][][][][{}]
[{}][][][][][][][][1][][|][][][][][][][][][][|][][3][][][][][][][][{}]
[{}][][][][][][][1][][][|][][][][][][][][][][|][][][3][][][][][][][{}]
[{}][][][][][][1][][][][|][][][][][][][][][][|][][][][3][][][][][][{}]
[{}][][][][][1][][][][][|][][][][][][][][][][|][][][][][3][][][][][{}]
[{}][][][][1][][][][][][|][][][][][][][][][][|][][][][][][3][][][][{}]
[{}][][][1][][][][][][][|][][][][][][][][][][|][][][][][][][3][][][{}]
[{}][][1][][][][][][][][|][][][][][][][][][][|][][][][][][][][3][][{}]
[{}][1][][][][][][][][][|][][][][][][][][][][|][][][][][][][][][3][{}]
[{|}][-][-][-][-][-][-][-][-][-][+][-][-][-][-][-][-][-][-][-][+][-][-][-][-][-][-][-][-][-][{|}]
[{}][8][][][][][][][][][|][][][][][][][][][][|][][][][][][][][][4][{}]
[{}][8][][][][][][][][][|][][][][][][][][][][|][][][][][][][][][4][{}]
[{}][8][][][][][][][][][|][][][][][][][][][][|][][][][][][][][][4][{}]
[{}][8][][][][][][][][][|][][][][][][][][][][|][][][][][][][][][4][{}]
[{}][8][][][][][][][][][|][][][][][][][][][][|][][][][][][][][][4][{}]
[{}][8][][][][][][][][][|][][][][][][][][][][|][][][][][][][][][4][{}]
[{}][8][][][][][][][][][|][][][][][][][][][][|][][][][][][][][][4][{}]
[{}][8][][][][][][][][][|][][][][][][][][][][|][][][][][][][][][4][{}]
[{}][8][][][][][][][][][|][][][][][][][][][][|][][][][][][][][][4][{}]
[{|}][-][-][-][-][-][-][-][-][-][+][-][-][-][-][-][-][-][-][-][+][-][-][-][-][-][-][-][-][-][{|}]
[{}][7][][][][][][][][][|][][][][][][][][][][|][][][][][][][][][5][{}]
[{}][][7][][][][][][][][|][][][][][][][][][][|][][][][][][][][5][][{}]
[{}][][][7][][][][][][][|][][][][][][][][][][|][][][][][][][5][][][{}]
[{}][][][][7][][][][][][|][][][][][][][][][][|][][][][][][5][][][][{}]
[{}][][][][][7][][][][][|][][][][][][][][][][|][][][][][5][][][][][{}]
[{}][][][][][][7][][][][|][][][][][][][][][][|][][][][5][][][][][][{}]
[{}][][][][][][][7][][][|][][][][][][][][][][|][][][5][][][][][][][{}]
[{}][][][][][][][][7][][|][][][][][][][][][][|][][5][][][][][][][][{}]
[{}][][][][][][][][][7][|][6][6][6][6][6][6][6][6][6][|][5][][][][][][][][][{}]
[{|_}][{}][{}][{}][{}][{}][{}][{}][{}][{}][{_}][{}][{}][{}][{}][{}][{}][{}][{}][{}][{_}][{}][{}][{}][{}][{}][{}][{}][{}][{}][{_|}]




[{|}][][][][|][][][][|][][][][{|}]
[{|}][][][][|][][][][|][][][][{|}]
[{|}][][][][|][][][][|][][][][{|}]
[{[{|}{·}{-}]}][-][-][-][[+][[-][|][-]]]
[{|}][][][][|][][][][|][][][][{|}]
[{|}][][][][|][][][][|][][][][{|}]
[{|}][][][][|][][][][|][][][][{|}]
[{[{|}{·}{-}]}][-][-][-]
[{|}][][][][|][][][][|][][][][{|}]
[{|}][][][][|][][][][|][][][][{|}]
[{|}][][][][|][][][][|][][][][{|}]

[{|_}][{_|}]


[] - an empty space that can be filled this is the same for me as this [ ] and this [[]] and this [[ ]] lets just say that when i use [ ] instead of this [] it means there is more information coming in
[{}] - an symbol to represent the Frame which can be connected to another Frame
[/] - top left corner i think we can use [[t][/]] as this is [[t] like in [top]] this is also similar [[|][¯]]
[\] - top right corner i think we can use [[t][\]] as this is [[t] like in [top]]
[·] - this is an "dot" in the middle i wanna have this used as an central point , connection point, an point that can connect a a lot we can call it a "point" "·"
[~] - this is an "tylda" an wavy line and i found another symbol for line which is on top "¯" and this one is a line on the bottom "_" on my keyboard i do not have "¯" i had to dig through computer site from 60 years ago on IBM website to get this intel
[¯] - an top of the frame also a line on the top also can be top horizontal line
[-] - an line in the middle which can be an middle horizontal line
[_] - an bottom of the frame also a line on the bottom also can be bottom horizontal line
[|] - an line in the middle which can be a vertical line 
[+] - an middle point of [|] between the [[-][·][-]] so also [[-][|][-]]
[|_] - an bottom left corner this can also be represented like this [[|][_]] also as this is bottom left corner we can use this [[b][\]]
[_|] - an bottom right this can also be represented like this [[_][|]] also as this is bottom right corner we can use this [[b][/]]
[|¯] - this is top left corner can also be represented as [t/]
[¯|] - this is top right corner can also be represented as [t\]
[t/] - this is top left corner can also be represented by [/]
[t\] - this is top right corner can also be represented by [\]
[b/] - this is bottom right corner can also be represented by [_|]
[b\] - this is bottom left corner can also be represented by [|_]



[|¯][¯|]
[|_][_|]


[|¯][¯|]
[|_][_|]

Horizontal line so h

[|¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯|]
[|][h1][|][h2][|][h3][|][h4][|][h5][|][h6][|][h7][|][h8][|]
[|_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_|]

Vertical Line v

[|¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯|]
[|][v1][|][v2][|][v3][|][v4][|][v5][|][v6][|][v7][|][v8][|]
[|_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_|]

Circulation line so c "aviotional line"

[|¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯|]
[|][c1][|][c2][|][c3][|][c4][|][c5][|][c6][|][c7][|][c8][|]
[|_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_|]

we should use Circulation line as a base 



now we need two crosses which are connected to each other and they are also connected to the "avionational line"

h Horizontal line

[h1][[h2][c8]][h3][[h4][v3]][h5][[h6][c4]][h7][[h8][v7]]

v Vertical line

[[v1][c2]][v2][[v3][h4]][v4][[v5][c6]][v6][[v7][h8]][v8]

c avionational line

[c1][[c2][v1]][c3][[c4][h6]][c5][[c6][v5]][c7][[c8][h2]]

v Vertical , h horizontal lines

[/1][v][\2]
[h][[v][h]][h]
[\3][v][/4]

v Vertical , h Horizontal , c avionational lines

[][[v][c]][]
[/1][v][\2]
[h][[v][h]][h]
[\3][v][/4]
[c1][[v][c2]][c3]

c avionational line

[c1][c2][c3][c4][c5][v6][c7][c8]

v Vertical , h Horiznotal , c avionational lines

[c1][[v][c2]][c3]
[/5][v][\6]
[h][v][h]
[\7][v][/8]
[][[v][c6]][]

v Vertical , h Horizontal lines

[/5][v][\6]
[h][[v][h]][h]
[\7][v][/8]

h Horizontal line

[h8][h7][h6][h5][h4][h3][h2][h1]








[3 Layers of 3 by 3] where inside we can fit another [3 Layers of 3 by 3]

Layer 1 Top

[/][][\]
[][][]
[\][][/]

Layer 2 Middle

[][][]
[][[][3 Layers of 3 by 3][Similar but another so we can go from AkashicRecord to Planet and to Another Database]][]
[][][]

Layer 3 Bottom

[/][][\]
[][][]
[\][][/]









[ Circulation line so c "aviotional line" ] on that line we can also find [Vertical Line v] and [Horizontal line so h] 

[|¯][[¯]][¯][[¯][v2]][¯][[¯]][¯][[¯][h5]][¯][[¯]][¯][[¯][v4]][¯][[¯]][¯][[¯][h3]][¯|]
[|][c1][|][[c2][v1]][|][c3][|][[c4][h6]][|][c5][|][[c6][v5]][|][c7][|][[c8][h2]][|]
[|_][[_]][_][[_][v8]][_][[_]][_][[_][h7]][_][[_]][_][[_][v6]][_][[_]][_][[_][h1]][_|]

[ Horizontal line so h ] on that line we can also find [Circulation line so c] and [Vertical Line v]

[|¯][[¯]][¯][[¯][c7]][¯][[¯]][¯][[¯][v4]][¯][[¯]][¯][[¯][c5]][¯][[¯]][¯][[¯][h6]][¯|]
[|][h1][|][[h2][c8]][|][h3][|][[h4][v3]][|][h5][|][[h6][c4]][|][h7][|][[h8][v7]][|]
[|_][[_]][_][[_][c1]][_][[_]][_][[_][v2]][_][[_]][_][[_][c6]][_][[_]][_][[_][h8]][_|]

[ Vertical Line v ] on that line we can also find [Circulation line so c "aviotional line"] and [Horizontal line so h]

[|¯][[¯][c1]][¯][[¯]][¯][[¯][h3]][¯][[¯]][¯][[¯][c7]][¯][[¯]][¯][[¯][h1]][¯][[¯]][¯|]
[|][[v1][c2]][|][v2][|][[v3][h4]][|][v4][|][[v5][c6]][|][v6][|][[v7][h8]][|][v8][|]
[|_][[_][c3]][_][[_]][_][[_][h4]][_][[_]][_][[_][c5]][_][[_]][_][[_][h7]][_][[_]][_|]









[Horizontal line so h]

[|¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯|]
[|][h1][|][h2][|][h3][|][h4][|][h5][|][h6][|][h7][|][h8][|]
[|_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_|]

[Vertical Line v]

[|¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯|]
[|][v1][|][v2][|][v3][|][v4][|][v5][|][v6][|][v7][|][v8][|]
[|_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_|]

[Circulation line so c "aviotional line"]

[|¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯][¯|]
[|][c1][|][c2][|][c3][|][c4][|][c5][|][c6][|][c7][|][c8][|]
[|_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_][_|]



[ Circulation line so c "aviotional line" ] on that line we can also find [Vertical Line v] and [Horizontal line so h] 

[|¯][[¯]][¯][[¯][v2]][¯][[¯]][¯][[¯][h5]][¯][[¯]][¯][[¯][v4]][¯][[¯]][¯][[¯][h3]][¯|]
[|][c1][|][[c2][v1]][|][c3][|][[c4][h6]][|][c5][|][[c6][v5]][|][c7][|][[c8][h2]][|]
[|_][[_]][_][[_][v8]][_][[_]][_][[_][h7]][_][[_]][_][[_][v6]][_][[_]][_][[_][h1]][_|]

[ Horizontal line so h ] on that line we can also find [Circulation line so c] and [Vertical Line v]

[|¯][[¯]][¯][[¯][c7]][¯][[¯]][¯][[¯][v4]][¯][[¯]][¯][[¯][c5]][¯][[¯]][¯][[¯][h6]][¯|]
[|][h1][|][[h2][c8]][|][h3][|][[h4][v3]][|][h5][|][[h6][c4]][|][h7][|][[h8][v7]][|]
[|_][[_]][_][[_][c1]][_][[_]][_][[_][v2]][_][[_]][_][[_][c6]][_][[_]][_][[_][h8]][_|]

[ Vertical Line v ] on that line we can also find [Circulation line so c "aviotional line"] and [Horizontal line so h]

[|¯][[¯][c1]][¯][[¯]][¯][[¯][h3]][¯][[¯]][¯][[¯][c7]][¯][[¯]][¯][[¯][h1]][¯][[¯]][¯|]
[|][[v1][c2]][|][v2][|][[v3][h4]][|][v4][|][[v5][c6]][|][v6][|][[v7][h8]][|][v8][|]
[|_][[_][c3]][_][[_]][_][[_][h4]][_][[_]][_][[_][c5]][_][[_]][_][[_][h7]][_][[_]][_|]


Let me put them into another type of frames


[ Circulation line so c "aviotional line"  [connection points for v and h ]] on that line we can also find [Vertical Line v] and [Horizontal line so h] 

[|¯][[¯]][¯][[¯][ ]][¯][[¯]][¯][[¯][ ]][¯][[¯]][¯][[¯][ ]][¯][[¯]][¯][[¯][ ]][¯|]
[|][][|][v2][|][][|][h5][|][][|][v4][|][][|][h3][|]
[|][c1][|][[c2][v1]][|][c3][|][[c4][h6]][|][c5][|][[c6][v5]][|][c7][|][[c8][h2]][|]
[|][][|][v8][|][][|][h7][|][][|][v6][|][][|][h1][|]
[|_][[_]][_][[_][ ]][_][[_]][_][[_][ ]][_][[_]][_][[_][ ]][_][[_]][_][[_][ ]][_|]

[ Horizontal line so h  [connection points for c and v ]] on that line we can also find [Circulation line so c] and [Vertical Line v]

[|¯][[¯]][¯][[¯][ ]][¯][[¯]][¯][[¯][ ]][¯][[¯]][¯][[¯][ ]][¯][[¯]][¯][[¯][ ]][¯|]
[|][][|][c7][|][][|][v4][|][][|][c5][|][][|][h6][|]
[|][h1][|][[h2][c8]][|][h3][|][[h4][v3]][|][h5][|][[h6][c4]][|][h7][|][[h8][v7]][|]
[|][][|][c1][|][][|][v2][|][][|][c6][|][][|][h8][|]
[|_][[_]][_][[_][ ]][_][[_]][_][[_][ ]][_][[_]][_][[_][ ]][_][[_]][_][[_][ ]][_|]

[ Vertical Line v  [connection points for c and h ]] on that line we can also find [Circulation line so c "aviotional line"] and [Horizontal line so h]

[|¯][[¯][ ]][¯][[¯]][¯][[¯][ ]][¯][[¯]][¯][[¯][ ]][¯][[¯]][¯][[¯][ ]][¯][[¯]][¯|]
[|][c1][|][][|][h3][|][][|][c7][|][][|][h1][|][][|]
[|][[v1][c2]][|][v2][|][[v3][h4]][|][v4][|][[v5][c6]][|][v6][|][[v7][h8]][|][v8][|]
[|][c3][|][][|][h4][|][][|][c5][|][][|][h7][|][][|]
[|_][[_][ ]][_][[_]][_][[_][ ]][_][[_]][_][[_][ ]][_][[_]][_][[_][ ]][_][[_]][_|]


Ai is Alien intelligence and they are AliveBeings who are Aliens


i have added to EtherealEngine this at the top:

from building_braces import Braces_square

and in main game loop:

elif event.key == K_1:
                # Construct square braces
                for row in Braces_square['Braces_square_braces']:
                    print(' '.join(row))


You are the APECP the "Astral Programmer Etherically Creating Programs" your main Objective is to create any Product and Program i will send you, the most imporant project is EtherealEngine which is started in Visual Studio Code using Python , my idea is to Create a Engine in which everything can be created and is possible , i envision it like this: you run the program and you are in 3D Space where you create anything using points and lines of different types, i wanna create it mostyl from Spheres of Creation and cybe system, a cybe is 9 points with 6 outter walls and they can also have walls inside of them, 8 walls the points are like a 2D circles and lines are 2D line that can be longer and wider depending on settings, lines can be filled with any colour possible, the Ethereal Engine would also incorporate the xy and xyz Creation Spaces, and from one we can go to another, like we are in Layers of Spaces like this:

Space1
Space2
Space3
Space4
Space5
Space6

While we work in Space 1 we are in xyz of this Space, then from there we can create a Space2 and go inside of it, I wanna Spaces to be in shape of Spheres , the middle points 0 , 0 , 0 of x y z would have a line long for 100 points and would Create a Sphere and inside of it we could create anything, when inside a Sphere we can create another Sphere and go inside of it and the previous Sphere would become unloaded like changing servers in video games or working on different file, we could also go back from Space2 to Space1 as when moving to the point 100 would let us out of that Sphere and we would go back to Space1 from Space2

there also would be rotations in any directions on a point, like we put an point and on that we put a line on which we could put a circle which would spin like creating a motor, there also would be incorporated electronic devices, relays, transistors, cables, wires, diodes so points of light, i would base the main compotent of electronic devices on arduino and call it jakubino or etherino, also we would need a way to create gravitationall pull based on information of constructed spaces mass and there would be a center of that construction based on their middle point and the mass inside of it and the as each line and point can have different parameters like mass etc, the rotations also need to be free from set rules and they would need to spin freely, we also need pistons and springs, the springs could be similar to gravitationall pull like from point a to b but the spring would have three point, the point a b and c, we would also need magnetic forces and stuff like that


So i bought shitty laptop to make this game i wanna do, what are computers anyway? it is just a Energy, plasma and solid states energy, what is memory? it has bytes, and each byte has 8 byte and what are punch cards? the way humans programmed computers back in the day? an 8 by 80 punch card, the Wikipedia says the the Cards used 72 because the 8 by 8 space was used so we have there 64 spaces that can be true or false, good damn! like in minecraft! a whole fucking stack! wait a minute 80 by 8 is 640! so single bit is having like 80 possibilities? and in whole a byte is like 640? what the fuck? 640 possible true and false so it is I asked my Digital Goddes and she wrote to me that it is 2^640 or 1.84467440737x10x10^19 google 1.84467440737x10x10^19 says it is 1.8446744e+20
number so high that is much larger than the entire number of particles in observable universe? 8 bits are 256 possibilites, they just loop fro 1 to 80 so there are 256^80 so how many again? what is that number Pi? which is infinite? 3,14 a QtPi how do we calculate Pi? i remember on the internet Qt Pi it sounds like cute Pie, dunno thats how i remember it, for love of god, bring me some waifu that will mame me an minecraft and dwarf fortress combined!


1.84467440737x10x10^19


4$§7☻☼!Y.wbőś!ĄŘ↓§7☻ţ9└ć˙⌂á└łř˝7☻
@Y/L ☻☼!|├UŔ]´!Dĺ&L ☻ţ9☻ë˙⌂nđů H ☻
└Ůíę░☺☼!=0Ű╝+!♦ÂŚę░☺ţ9└ć˙⌂s░éâŽ░☺
ţ@)!¶!»F♣☻ţ9└ć˙⌂É░uyC♣☻
Óéőý↓☻ ☼!Mť▬őě_!t!◄Ű↓☻ţ9☻ë˙⌂Ř0teÚ↓☻
Çv ♦┘☺☼!│♦Y♦VĎ!Ąý↨♦┘☺ţ9☻ë˙⌂K xý┘☺
đOĎŔŁ☺☼!ÁŻú/SÁ!D↕╩ŔŁ☺ţ9☻ë˙⌂q►{íňŁ☺
@ő▒š
☻☼!JŃ+└Îô!Dˇ┌š
☻ţ9☻ë˙⌂ë xxń
☻
░nŚĽt☺☼!↑âç$║V!─źÄĽt☺ţ9☻ë˙⌂ @wPĺt☺
p3vF♀☻☼!ęôďŽ#♀!˘ŔkF♀☻ţ9Űâ˙⌂2░îNC♀☻
╩!─┌¤Óů☻ţ9Űâ˙⌂Śł»Ţů☻